Name:         clusterissuers.cert-manager.io
Namespace:    
Labels:       app=cert-manager
              app.kubernetes.io/instance=cert-manager
              app.kubernetes.io/managed-by=Helm
              app.kubernetes.io/name=cert-manager
              app.kubernetes.io/version=v1.7.1
              helm.sh/chart=cert-manager-v1.7.1
Annotations:  cert-manager.io/inject-ca-from-secret: kube-system/cert-manager-webhook-ca
              meta.helm.sh/release-name: cert-manager
              meta.helm.sh/release-namespace: kube-system
API Version:  apiextensions.k8s.io/v1
Kind:         CustomResourceDefinition
Metadata:
  Creation Timestamp:  2022-02-19T12:15:00Z
  Generation:          1
  Managed Fields:
    API Version:  apiextensions.k8s.io/v1
    Fields Type:  FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .:
          f:cert-manager.io/inject-ca-from-secret:
          f:meta.helm.sh/release-name:
          f:meta.helm.sh/release-namespace:
        f:labels:
          .:
          f:app:
          f:app.kubernetes.io/instance:
          f:app.kubernetes.io/managed-by:
          f:app.kubernetes.io/name:
          f:app.kubernetes.io/version:
          f:helm.sh/chart:
      f:spec:
        f:conversion:
          .:
          f:strategy:
        f:group:
        f:names:
          f:categories:
          f:kind:
          f:listKind:
          f:plural:
          f:singular:
        f:scope:
        f:versions:
    Manager:      Go-http-client
    Operation:    Update
    Time:         2022-02-19T12:15:00Z
    API Version:  apiextensions.k8s.io/v1
    Fields Type:  FieldsV1
    fieldsV1:
      f:status:
        f:acceptedNames:
          f:categories:
          f:kind:
          f:listKind:
          f:plural:
          f:singular:
        f:conditions:
          k:{"type":"Established"}:
            .:
            f:lastTransitionTime:
            f:message:
            f:reason:
            f:status:
            f:type:
          k:{"type":"NamesAccepted"}:
            .:
            f:lastTransitionTime:
            f:message:
            f:reason:
            f:status:
            f:type:
    Manager:         kube-apiserver
    Operation:       Update
    Time:            2022-02-19T12:15:00Z
  Resource Version:  1044211
  UID:               0c659a3b-6ffa-44e1-8b52-e958c10c7cec
Spec:
  Conversion:
    Strategy:  None
  Group:       cert-manager.io
  Names:
    Categories:
      cert-manager
    Kind:       ClusterIssuer
    List Kind:  ClusterIssuerList
    Plural:     clusterissuers
    Singular:   clusterissuer
  Scope:        Cluster
  Versions:
    Additional Printer Columns:
      Json Path:    .status.conditions[?(@.type=="Ready")].status
      Name:         Ready
      Type:         string
      Json Path:    .status.conditions[?(@.type=="Ready")].message
      Name:         Status
      Priority:     1
      Type:         string
      Description:  CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
      Json Path:    .metadata.creationTimestamp
      Name:         Age
      Type:         date
    Name:           v1
    Schema:
      openAPIV3Schema:
        Description:  A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.
        Properties:
          API Version:
            Description:  APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            Type:         string
          Kind:
            Description:  Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            Type:         string
          Metadata:
            Type:  object
          Spec:
            Description:  Desired state of the ClusterIssuer resource.
            Properties:
              Acme:
                Description:  ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
                Properties:
                  Disable Account Key Generation:
                    Description:  Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
                    Type:         boolean
                  Email:
                    Description:  Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
                    Type:         string
                  Enable Duration Feature:
                    Description:  Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.
                    Type:         boolean
                  External Account Binding:
                    Description:  ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
                    Properties:
                      Key Algorithm:
                        Description:  Deprecated: keyAlgorithm field exists for historical compatibility reasons and should not be used. The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.
                        Enum:
                          HS256
                          HS384
                          HS512
                        Type:  string
                      Key ID:
                        Description:  keyID is the ID of the CA key that the External Account is bound to.
                        Type:         string
                      Key Secret Ref:
                        Description:  keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
                        Properties:
                          Key:
                            Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                            Type:         string
                          Name:
                            Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            Type:         string
                        Required:
                          name
                        Type:  object
                    Required:
                      keyID
                      keySecretRef
                    Type:  object
                  Preferred Chain:
                    Description:  PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN
                    Max Length:   64
                    Type:         string
                  Private Key Secret Ref:
                    Description:  PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
                    Properties:
                      Key:
                        Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                        Type:         string
                      Name:
                        Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        Type:         string
                    Required:
                      name
                    Type:  object
                  Server:
                    Description:  Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
                    Type:         string
                  Skip TLS Verify:
                    Description:  Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
                    Type:         boolean
                  Solvers:
                    Description:  Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
                    Items:
                      Description:  An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of. A selector may be provided to use different solving strategies for different DNS names. Only one of HTTP01 or DNS01 must be provided.
                      Properties:
                        dns01:
                          Description:  Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
                          Properties:
                            Acme DNS:
                              Description:  Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
                              Properties:
                                Account Secret Ref:
                                  Description:  A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                  Properties:
                                    Key:
                                      Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      Type:         string
                                    Name:
                                      Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      Type:         string
                                  Required:
                                    name
                                  Type:  object
                                Host:
                                  Type:  string
                              Required:
                                accountSecretRef
                                host
                              Type:  object
                            Akamai:
                              Description:  Use the Akamai DNS zone management API to manage DNS01 challenge records.
                              Properties:
                                Access Token Secret Ref:
                                  Description:  A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                  Properties:
                                    Key:
                                      Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      Type:         string
                                    Name:
                                      Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      Type:         string
                                  Required:
                                    name
                                  Type:  object
                                Client Secret Secret Ref:
                                  Description:  A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                  Properties:
                                    Key:
                                      Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      Type:         string
                                    Name:
                                      Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      Type:         string
                                  Required:
                                    name
                                  Type:  object
                                Client Token Secret Ref:
                                  Description:  A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                  Properties:
                                    Key:
                                      Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      Type:         string
                                    Name:
                                      Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      Type:         string
                                  Required:
                                    name
                                  Type:  object
                                Service Consumer Domain:
                                  Type:  string
                              Required:
                                accessTokenSecretRef
                                clientSecretSecretRef
                                clientTokenSecretRef
                                serviceConsumerDomain
                              Type:  object
                            Azure DNS:
                              Description:  Use the Microsoft Azure DNS API to manage DNS01 challenge records.
                              Properties:
                                Client ID:
                                  Description:  if both this and ClientSecret are left unset MSI will be used
                                  Type:         string
                                Client Secret Secret Ref:
                                  Description:  if both this and ClientID are left unset MSI will be used
                                  Properties:
                                    Key:
                                      Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      Type:         string
                                    Name:
                                      Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      Type:         string
                                  Required:
                                    name
                                  Type:  object
                                Environment:
                                  Description:  name of the Azure environment (default AzurePublicCloud)
                                  Enum:
                                    AzurePublicCloud
                                    AzureChinaCloud
                                    AzureGermanCloud
                                    AzureUSGovernmentCloud
                                  Type:  string
                                Hosted Zone Name:
                                  Description:  name of the DNS zone that should be used
                                  Type:         string
                                Managed Identity:
                                  Description:  managed identity configuration, can not be used at the same time as clientID, clientSecretSecretRef or tenantID
                                  Properties:
                                    Client ID:
                                      Description:  client ID of the managed identity, can not be used at the same time as resourceID
                                      Type:         string
                                    Resource ID:
                                      Description:  resource ID of the managed identity, can not be used at the same time as clientID
                                      Type:         string
                                  Type:             object
                                Resource Group Name:
                                  Description:  resource group the DNS zone is located in
                                  Type:         string
                                Subscription ID:
                                  Description:  ID of the Azure subscription
                                  Type:         string
                                Tenant ID:
                                  Description:  when specifying ClientID and ClientSecret then this field is also needed
                                  Type:         string
                              Required:
                                resourceGroupName
                                subscriptionID
                              Type:  object
                            Cloud DNS:
                              Description:  Use the Google Cloud DNS API to manage DNS01 challenge records.
                              Properties:
                                Hosted Zone Name:
                                  Description:  HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
                                  Type:         string
                                Project:
                                  Type:  string
                                Service Account Secret Ref:
                                  Description:  A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                  Properties:
                                    Key:
                                      Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      Type:         string
                                    Name:
                                      Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      Type:         string
                                  Required:
                                    name
                                  Type:  object
                              Required:
                                project
                              Type:  object
                            Cloudflare:
                              Description:  Use the Cloudflare API to manage DNS01 challenge records.
                              Properties:
                                API Key Secret Ref:
                                  Description:  API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
                                  Properties:
                                    Key:
                                      Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      Type:         string
                                    Name:
                                      Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      Type:         string
                                  Required:
                                    name
                                  Type:  object
                                API Token Secret Ref:
                                  Description:  API token used to authenticate with Cloudflare.
                                  Properties:
                                    Key:
                                      Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      Type:         string
                                    Name:
                                      Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      Type:         string
                                  Required:
                                    name
                                  Type:  object
                                Email:
                                  Description:  Email of the account, only required when using API key based authentication.
                                  Type:         string
                              Type:             object
                            Cname Strategy:
                              Description:  CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
                              Enum:
                                None
                                Follow
                              Type:  string
                            Digitalocean:
                              Description:  Use the DigitalOcean DNS API to manage DNS01 challenge records.
                              Properties:
                                Token Secret Ref:
                                  Description:  A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                  Properties:
                                    Key:
                                      Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      Type:         string
                                    Name:
                                      Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      Type:         string
                                  Required:
                                    name
                                  Type:  object
                              Required:
                                tokenSecretRef
                              Type:  object
                            rfc2136:
                              Description:  Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
                              Properties:
                                Nameserver:
                                  Description:  The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
                                  Type:         string
                                Tsig Algorithm:
                                  Description:  The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
                                  Type:         string
                                Tsig Key Name:
                                  Description:  The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
                                  Type:         string
                                Tsig Secret Secret Ref:
                                  Description:  The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
                                  Properties:
                                    Key:
                                      Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      Type:         string
                                    Name:
                                      Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      Type:         string
                                  Required:
                                    name
                                  Type:  object
                              Required:
                                nameserver
                              Type:  object
                            route53:
                              Description:  Use the AWS Route53 API to manage DNS01 challenge records.
                              Properties:
                                Access Key ID:
                                  Description:  The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                  Type:         string
                                Hosted Zone ID:
                                  Description:  If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
                                  Type:         string
                                Region:
                                  Description:  Always set the region when using AccessKeyID and SecretAccessKey
                                  Type:         string
                                Role:
                                  Description:  Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
                                  Type:         string
                                Secret Access Key Secret Ref:
                                  Description:  The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                  Properties:
                                    Key:
                                      Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      Type:         string
                                    Name:
                                      Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      Type:         string
                                  Required:
                                    name
                                  Type:  object
                              Required:
                                region
                              Type:  object
                            Webhook:
                              Description:  Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
                              Properties:
                                Config:
                                  Description:                                   Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
                                  X - Kubernetes - Preserve - Unknown - Fields:  true
                                Group Name:
                                  Description:  The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
                                  Type:         string
                                Solver Name:
                                  Description:  The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
                                  Type:         string
                              Required:
                                groupName
                                solverName
                              Type:  object
                          Type:      object
                        http01:
                          Description:  Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                          Properties:
                            Gateway HTTP Route:
                              Description:  The Gateway API is a sig-network community API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.
                              Properties:
                                Labels:
                                  Additional Properties:
                                    Type:       string
                                  Description:  The labels that cert-manager will use when creating the temporary HTTPRoute needed for solving the HTTP-01 challenge. These labels must match the label selector of at least one Gateway.
                                  Type:         object
                                Service Type:
                                  Description:  Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
                                  Type:         string
                              Type:             object
                            Ingress:
                              Description:  The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
                              Properties:
                                Class:
                                  Description:  The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
                                  Type:         string
                                Ingress Template:
                                  Description:  Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.
                                  Properties:
                                    Metadata:
                                      Description:  ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
                                      Properties:
                                        Annotations:
                                          Additional Properties:
                                            Type:       string
                                          Description:  Annotations that should be added to the created ACME HTTP01 solver ingress.
                                          Type:         object
                                        Labels:
                                          Additional Properties:
                                            Type:       string
                                          Description:  Labels that should be added to the created ACME HTTP01 solver ingress.
                                          Type:         object
                                      Type:             object
                                  Type:                 object
                                Name:
                                  Description:  The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
                                  Type:         string
                                Pod Template:
                                  Description:  Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.
                                  Properties:
                                    Metadata:
                                      Description:  ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
                                      Properties:
                                        Annotations:
                                          Additional Properties:
                                            Type:       string
                                          Description:  Annotations that should be added to the create ACME HTTP01 solver pods.
                                          Type:         object
                                        Labels:
                                          Additional Properties:
                                            Type:       string
                                          Description:  Labels that should be added to the created ACME HTTP01 solver pods.
                                          Type:         object
                                      Type:             object
                                    Spec:
                                      Description:  PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
                                      Properties:
                                        Affinity:
                                          Description:  If specified, the pod's scheduling constraints
                                          Properties:
                                            Node Affinity:
                                              Description:  Describes node affinity scheduling rules for the pod.
                                              Properties:
                                                Preferred During Scheduling Ignored During Execution:
                                                  Description:  The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
                                                  Items:
                                                    Description:  An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                                    Properties:
                                                      Preference:
                                                        Description:  A node selector term, associated with the corresponding weight.
                                                        Properties:
                                                          Match Expressions:
                                                            Description:  A list of node selector requirements by node's labels.
                                                            Items:
                                                              Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                              Properties:
                                                                Key:
                                                                  Description:  The label key that the selector applies to.
                                                                  Type:         string
                                                                Operator:
                                                                  Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                  Type:         string
                                                                Values:
                                                                  Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                                  Items:
                                                                    Type:  string
                                                                  Type:    array
                                                              Required:
                                                                key
                                                                operator
                                                              Type:  object
                                                            Type:    array
                                                          Match Fields:
                                                            Description:  A list of node selector requirements by node's fields.
                                                            Items:
                                                              Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                              Properties:
                                                                Key:
                                                                  Description:  The label key that the selector applies to.
                                                                  Type:         string
                                                                Operator:
                                                                  Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                  Type:         string
                                                                Values:
                                                                  Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                                  Items:
                                                                    Type:  string
                                                                  Type:    array
                                                              Required:
                                                                key
                                                                operator
                                                              Type:  object
                                                            Type:    array
                                                        Type:        object
                                                      Weight:
                                                        Description:  Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                        Format:       int32
                                                        Type:         integer
                                                    Required:
                                                      preference
                                                      weight
                                                    Type:  object
                                                  Type:    array
                                                Required During Scheduling Ignored During Execution:
                                                  Description:  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
                                                  Properties:
                                                    Node Selector Terms:
                                                      Description:  Required. A list of node selector terms. The terms are ORed.
                                                      Items:
                                                        Description:  A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                        Properties:
                                                          Match Expressions:
                                                            Description:  A list of node selector requirements by node's labels.
                                                            Items:
                                                              Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                              Properties:
                                                                Key:
                                                                  Description:  The label key that the selector applies to.
                                                                  Type:         string
                                                                Operator:
                                                                  Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                  Type:         string
                                                                Values:
                                                                  Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                                  Items:
                                                                    Type:  string
                                                                  Type:    array
                                                              Required:
                                                                key
                                                                operator
                                                              Type:  object
                                                            Type:    array
                                                          Match Fields:
                                                            Description:  A list of node selector requirements by node's fields.
                                                            Items:
                                                              Description:  A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                              Properties:
                                                                Key:
                                                                  Description:  The label key that the selector applies to.
                                                                  Type:         string
                                                                Operator:
                                                                  Description:  Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                  Type:         string
                                                                Values:
                                                                  Description:  An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                                  Items:
                                                                    Type:  string
                                                                  Type:    array
                                                              Required:
                                                                key
                                                                operator
                                                              Type:  object
                                                            Type:    array
                                                        Type:        object
                                                      Type:          array
                                                  Required:
                                                    nodeSelectorTerms
                                                  Type:  object
                                              Type:      object
                                            Pod Affinity:
                                              Description:  Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                              Properties:
                                                Preferred During Scheduling Ignored During Execution:
                                                  Description:  The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                                                  Items:
                                                    Description:  The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                    Properties:
                                                      Pod Affinity Term:
                                                        Description:  Required. A pod affinity term, associated with the corresponding weight.
                                                        Properties:
                                                          Label Selector:
                                                            Description:  A label query over a set of resources, in this case pods.
                                                            Properties:
                                                              Match Expressions:
                                                                Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                Items:
                                                                  Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                  Properties:
                                                                    Key:
                                                                      Description:  key is the label key that the selector applies to.
                                                                      Type:         string
                                                                    Operator:
                                                                      Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                      Type:         string
                                                                    Values:
                                                                      Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                      Items:
                                                                        Type:  string
                                                                      Type:    array
                                                                  Required:
                                                                    key
                                                                    operator
                                                                  Type:  object
                                                                Type:    array
                                                              Match Labels:
                                                                Additional Properties:
                                                                  Type:       string
                                                                Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                Type:         object
                                                            Type:             object
                                                          Namespace Selector:
                                                            Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                                            Properties:
                                                              Match Expressions:
                                                                Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                Items:
                                                                  Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                  Properties:
                                                                    Key:
                                                                      Description:  key is the label key that the selector applies to.
                                                                      Type:         string
                                                                    Operator:
                                                                      Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                      Type:         string
                                                                    Values:
                                                                      Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                      Items:
                                                                        Type:  string
                                                                      Type:    array
                                                                  Required:
                                                                    key
                                                                    operator
                                                                  Type:  object
                                                                Type:    array
                                                              Match Labels:
                                                                Additional Properties:
                                                                  Type:       string
                                                                Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                Type:         object
                                                            Type:             object
                                                          Namespaces:
                                                            Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                                            Items:
                                                              Type:  string
                                                            Type:    array
                                                          Topology Key:
                                                            Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                            Type:         string
                                                        Required:
                                                          topologyKey
                                                        Type:  object
                                                      Weight:
                                                        Description:  weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                                        Format:       int32
                                                        Type:         integer
                                                    Required:
                                                      podAffinityTerm
                                                      weight
                                                    Type:  object
                                                  Type:    array
                                                Required During Scheduling Ignored During Execution:
                                                  Description:  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                  Items:
                                                    Description:  Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                                                    Properties:
                                                      Label Selector:
                                                        Description:  A label query over a set of resources, in this case pods.
                                                        Properties:
                                                          Match Expressions:
                                                            Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            Items:
                                                              Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                              Properties:
                                                                Key:
                                                                  Description:  key is the label key that the selector applies to.
                                                                  Type:         string
                                                                Operator:
                                                                  Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  Type:         string
                                                                Values:
                                                                  Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                  Items:
                                                                    Type:  string
                                                                  Type:    array
                                                              Required:
                                                                key
                                                                operator
                                                              Type:  object
                                                            Type:    array
                                                          Match Labels:
                                                            Additional Properties:
                                                              Type:       string
                                                            Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            Type:         object
                                                        Type:             object
                                                      Namespace Selector:
                                                        Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                                        Properties:
                                                          Match Expressions:
                                                            Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            Items:
                                                              Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                              Properties:
                                                                Key:
                                                                  Description:  key is the label key that the selector applies to.
                                                                  Type:         string
                                                                Operator:
                                                                  Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  Type:         string
                                                                Values:
                                                                  Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                  Items:
                                                                    Type:  string
                                                                  Type:    array
                                                              Required:
                                                                key
                                                                operator
                                                              Type:  object
                                                            Type:    array
                                                          Match Labels:
                                                            Additional Properties:
                                                              Type:       string
                                                            Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            Type:         object
                                                        Type:             object
                                                      Namespaces:
                                                        Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                                        Items:
                                                          Type:  string
                                                        Type:    array
                                                      Topology Key:
                                                        Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                        Type:         string
                                                    Required:
                                                      topologyKey
                                                    Type:  object
                                                  Type:    array
                                              Type:        object
                                            Pod Anti Affinity:
                                              Description:  Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                              Properties:
                                                Preferred During Scheduling Ignored During Execution:
                                                  Description:  The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                                                  Items:
                                                    Description:  The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                    Properties:
                                                      Pod Affinity Term:
                                                        Description:  Required. A pod affinity term, associated with the corresponding weight.
                                                        Properties:
                                                          Label Selector:
                                                            Description:  A label query over a set of resources, in this case pods.
                                                            Properties:
                                                              Match Expressions:
                                                                Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                Items:
                                                                  Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                  Properties:
                                                                    Key:
                                                                      Description:  key is the label key that the selector applies to.
                                                                      Type:         string
                                                                    Operator:
                                                                      Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                      Type:         string
                                                                    Values:
                                                                      Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                      Items:
                                                                        Type:  string
                                                                      Type:    array
                                                                  Required:
                                                                    key
                                                                    operator
                                                                  Type:  object
                                                                Type:    array
                                                              Match Labels:
                                                                Additional Properties:
                                                                  Type:       string
                                                                Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                Type:         object
                                                            Type:             object
                                                          Namespace Selector:
                                                            Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                                            Properties:
                                                              Match Expressions:
                                                                Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                Items:
                                                                  Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                  Properties:
                                                                    Key:
                                                                      Description:  key is the label key that the selector applies to.
                                                                      Type:         string
                                                                    Operator:
                                                                      Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                      Type:         string
                                                                    Values:
                                                                      Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                      Items:
                                                                        Type:  string
                                                                      Type:    array
                                                                  Required:
                                                                    key
                                                                    operator
                                                                  Type:  object
                                                                Type:    array
                                                              Match Labels:
                                                                Additional Properties:
                                                                  Type:       string
                                                                Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                Type:         object
                                                            Type:             object
                                                          Namespaces:
                                                            Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                                            Items:
                                                              Type:  string
                                                            Type:    array
                                                          Topology Key:
                                                            Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                            Type:         string
                                                        Required:
                                                          topologyKey
                                                        Type:  object
                                                      Weight:
                                                        Description:  weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                                        Format:       int32
                                                        Type:         integer
                                                    Required:
                                                      podAffinityTerm
                                                      weight
                                                    Type:  object
                                                  Type:    array
                                                Required During Scheduling Ignored During Execution:
                                                  Description:  If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                  Items:
                                                    Description:  Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                                                    Properties:
                                                      Label Selector:
                                                        Description:  A label query over a set of resources, in this case pods.
                                                        Properties:
                                                          Match Expressions:
                                                            Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            Items:
                                                              Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                              Properties:
                                                                Key:
                                                                  Description:  key is the label key that the selector applies to.
                                                                  Type:         string
                                                                Operator:
                                                                  Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  Type:         string
                                                                Values:
                                                                  Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                  Items:
                                                                    Type:  string
                                                                  Type:    array
                                                              Required:
                                                                key
                                                                operator
                                                              Type:  object
                                                            Type:    array
                                                          Match Labels:
                                                            Additional Properties:
                                                              Type:       string
                                                            Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            Type:         object
                                                        Type:             object
                                                      Namespace Selector:
                                                        Description:  A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
                                                        Properties:
                                                          Match Expressions:
                                                            Description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            Items:
                                                              Description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                              Properties:
                                                                Key:
                                                                  Description:  key is the label key that the selector applies to.
                                                                  Type:         string
                                                                Operator:
                                                                  Description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  Type:         string
                                                                Values:
                                                                  Description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                  Items:
                                                                    Type:  string
                                                                  Type:    array
                                                              Required:
                                                                key
                                                                operator
                                                              Type:  object
                                                            Type:    array
                                                          Match Labels:
                                                            Additional Properties:
                                                              Type:       string
                                                            Description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            Type:         object
                                                        Type:             object
                                                      Namespaces:
                                                        Description:  namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
                                                        Items:
                                                          Type:  string
                                                        Type:    array
                                                      Topology Key:
                                                        Description:  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                        Type:         string
                                                    Required:
                                                      topologyKey
                                                    Type:  object
                                                  Type:    array
                                              Type:        object
                                          Type:            object
                                        Node Selector:
                                          Additional Properties:
                                            Type:       string
                                          Description:  NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                          Type:         object
                                        Priority Class Name:
                                          Description:  If specified, the pod's priorityClassName.
                                          Type:         string
                                        Service Account Name:
                                          Description:  If specified, the pod's service account
                                          Type:         string
                                        Tolerations:
                                          Description:  If specified, the pod's tolerations.
                                          Items:
                                            Description:  The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                                            Properties:
                                              Effect:
                                                Description:  Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                                Type:         string
                                              Key:
                                                Description:  Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                                Type:         string
                                              Operator:
                                                Description:  Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                                                Type:         string
                                              Toleration Seconds:
                                                Description:  TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                                                Format:       int64
                                                Type:         integer
                                              Value:
                                                Description:  Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                                                Type:         string
                                            Type:             object
                                          Type:               array
                                      Type:                   object
                                  Type:                       object
                                Service Type:
                                  Description:  Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
                                  Type:         string
                              Type:             object
                          Type:                 object
                        Selector:
                          Description:  Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
                          Properties:
                            Dns Names:
                              Description:  List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
                              Items:
                                Type:  string
                              Type:    array
                            Dns Zones:
                              Description:  List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
                              Items:
                                Type:  string
                              Type:    array
                            Match Labels:
                              Additional Properties:
                                Type:       string
                              Description:  A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
                              Type:         object
                          Type:             object
                      Type:                 object
                    Type:                   array
                Required:
                  privateKeySecretRef
                  server
                Type:  object
              Ca:
                Description:  CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
                Properties:
                  Crl Distribution Points:
                    Description:  The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
                    Items:
                      Type:  string
                    Type:    array
                  Ocsp Servers:
                    Description:  The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                    Items:
                      Type:  string
                    Type:    array
                  Secret Name:
                    Description:  SecretName is the name of the secret used to sign Certificates issued by this Issuer.
                    Type:         string
                Required:
                  secretName
                Type:  object
              Self Signed:
                Description:  SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
                Properties:
                  Crl Distribution Points:
                    Description:  The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
                    Items:
                      Type:  string
                    Type:    array
                Type:        object
              Vault:
                Description:  Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
                Properties:
                  Auth:
                    Description:  Auth configures how cert-manager authenticates with the Vault server.
                    Properties:
                      App Role:
                        Description:  AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                        Properties:
                          Path:
                            Description:  Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
                            Type:         string
                          Role Id:
                            Description:  RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                            Type:         string
                          Secret Ref:
                            Description:  Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                            Properties:
                              Key:
                                Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                Type:         string
                              Name:
                                Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                Type:         string
                            Required:
                              name
                            Type:  object
                        Required:
                          path
                          roleId
                          secretRef
                        Type:  object
                      Kubernetes:
                        Description:  Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                        Properties:
                          Mount Path:
                            Description:  The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
                            Type:         string
                          Role:
                            Description:  A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                            Type:         string
                          Secret Ref:
                            Description:  The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
                            Properties:
                              Key:
                                Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                Type:         string
                              Name:
                                Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                Type:         string
                            Required:
                              name
                            Type:  object
                        Required:
                          role
                          secretRef
                        Type:  object
                      Token Secret Ref:
                        Description:  TokenSecretRef authenticates with Vault by presenting a token.
                        Properties:
                          Key:
                            Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                            Type:         string
                          Name:
                            Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            Type:         string
                        Required:
                          name
                        Type:  object
                    Type:      object
                  Ca Bundle:
                    Description:  PEM-encoded CA bundle (base64-encoded) used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                    Format:       byte
                    Type:         string
                  Namespace:
                    Description:  Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
                    Type:         string
                  Path:
                    Description:  Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
                    Type:         string
                  Server:
                    Description:  Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
                    Type:         string
                Required:
                  auth
                  path
                  server
                Type:  object
              Venafi:
                Description:  Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
                Properties:
                  Cloud:
                    Description:  Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
                    Properties:
                      API Token Secret Ref:
                        Description:  APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
                        Properties:
                          Key:
                            Description:  The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                            Type:         string
                          Name:
                            Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            Type:         string
                        Required:
                          name
                        Type:  object
                      URL:
                        Description:  URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
                        Type:         string
                    Required:
                      apiTokenSecretRef
                    Type:  object
                  Tpp:
                    Description:  TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
                    Properties:
                      Ca Bundle:
                        Description:  CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
                        Format:       byte
                        Type:         string
                      Credentials Ref:
                        Description:  CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
                        Properties:
                          Name:
                            Description:  Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            Type:         string
                        Required:
                          name
                        Type:  object
                      URL:
                        Description:  URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
                        Type:         string
                    Required:
                      credentialsRef
                      url
                    Type:  object
                  Zone:
                    Description:  Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
                    Type:         string
                Required:
                  zone
                Type:  object
            Type:      object
          Status:
            Description:  Status of the ClusterIssuer. This is set and managed automatically.
            Properties:
              Acme:
                Description:  ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
                Properties:
                  Last Registered Email:
                    Description:  LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
                    Type:         string
                  Uri:
                    Description:  URI is the unique account identifier, which can also be used to retrieve account details from the CA
                    Type:         string
                Type:             object
              Conditions:
                Description:  List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
                Items:
                  Description:  IssuerCondition contains condition information for an Issuer.
                  Properties:
                    Last Transition Time:
                      Description:  LastTransitionTime is the timestamp corresponding to the last status change of this condition.
                      Format:       date-time
                      Type:         string
                    Message:
                      Description:  Message is a human readable description of the details of the last transition, complementing reason.
                      Type:         string
                    Observed Generation:
                      Description:  If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.
                      Format:       int64
                      Type:         integer
                    Reason:
                      Description:  Reason is a brief machine readable explanation for the condition's last transition.
                      Type:         string
                    Status:
                      Description:  Status of the condition, one of (`True`, `False`, `Unknown`).
                      Enum:
                        True
                        False
                        Unknown
                      Type:  string
                    Type:
                      Description:  Type of the condition, known values are (`Ready`).
                      Type:         string
                  Required:
                    status
                    type
                  Type:  object
                Type:    array
            Type:        object
        Required:
          spec
        Type:  object
    Served:    true
    Storage:   true
    Subresources:
      Status:
Status:
  Accepted Names:
    Categories:
      cert-manager
    Kind:       ClusterIssuer
    List Kind:  ClusterIssuerList
    Plural:     clusterissuers
    Singular:   clusterissuer
  Conditions:
    Last Transition Time:  2022-02-19T12:15:00Z
    Message:               no conflicts found
    Reason:                NoConflicts
    Status:                True
    Type:                  NamesAccepted
    Last Transition Time:  2022-02-19T12:15:00Z
    Message:               the initial names have been accepted
    Reason:                InitialNamesAccepted
    Status:                True
    Type:                  Established
  Stored Versions:
    v1
Events:  <none>
